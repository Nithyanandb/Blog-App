{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nithy\\\\Documents\\\\Projects\\\\weblog\\\\src\\\\components\\\\Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Comment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = () => {\n  _s();\n  const [commenterName, setCommenterName] = useState('');\n  const [commentText, setCommentText] = useState('');\n  const [comments, setComments] = useState([]);\n  const addComment = () => {\n    if (commenterName && commentText) {\n      const newComment = {\n        commenter_name: commenterName,\n        comment_text: commentText\n      };\n      setComments(prevComments => [...prevComments, newComment]);\n      setCommenterName('');\n      setCommentText('');\n    } else {\n      alert('Please fill in both Fields');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leave a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Your Name\",\n      value: commenterName,\n      onChange: e => setCommenterName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Your Comment\",\n      value: commentText,\n      onChange: e => setCommentText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addComment,\n      children: \"Post Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No comments yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"comment-list\",\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [comment.commenter_name, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), \" \", comment.comment_text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"lDs2rQMOVDgqpq2EXH5zlrY292M=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Comment","_s","commenterName","setCommenterName","commentText","setCommentText","comments","setComments","addComment","newComment","commenter_name","comment_text","prevComments","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","map","comment","index","_c","$RefreshReg$"],"sources":["C:/Users/nithy/Documents/Projects/weblog/src/components/Comment.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Comment.css';\r\nconst Comment = () => {\r\n\r\n  const [commenterName, setCommenterName] = useState('');\r\n  const [commentText, setCommentText] = useState('');\r\n  const [comments, setComments] = useState([]);\r\n\r\n\r\n  const addComment = () => {\r\n    if (commenterName && commentText) {\r\n      const newComment = {\r\n        commenter_name: commenterName,\r\n        comment_text: commentText,\r\n      };\r\n\r\n\r\n      setComments((prevComments) => [...prevComments, newComment]);\r\n\r\n\r\n      setCommenterName('');\r\n      setCommentText('');\r\n    } else {\r\n      alert('Please fill in both Fields');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-section\">\r\n      <h2>Leave a Comment</h2>\r\n\r\n      <input type=\"text\" placeholder=\"Your Name\" value={commenterName}\r\n        onChange={(e) => setCommenterName(e.target.value)}/>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Your Comment\"\r\n        value={commentText}\r\n        onChange={(e) => setCommentText(e.target.value)}\r\n      />\r\n\r\n\r\n      <button onClick={addComment}>Post Comment</button>\r\n\r\n      <h3>Comments</h3>\r\n      {comments.length === 0 ? (\r\n        <p>No comments yet</p>\r\n      ) : (\r\n        <ul className=\"comment-list\">\r\n          {comments.map((comment, index) => (\r\n            <li key={index}>\r\n              <strong>{comment.commenter_name}:</strong> {comment.comment_text}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}